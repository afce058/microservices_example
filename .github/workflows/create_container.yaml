name: Push container
permissions:
  actions: write
  packages: write
  contents: read

on:
  workflow_call:
    inputs:
      tag:
        required: true
        type: string
      microservicePath:
        required: true
        type: string
      dockerfileName:
        required: true
        type: string
    secrets:
      DOCKER_REGISTRY:
        required: true      
      DOCKER_USERNAME:
        required: true      
      DOCKER_PASSWORD:
        required: true

jobs:
  push_container:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          sparse-checkout: |
            ${{ inputs.microservicePath }}
      
      - name: docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: build docker image
        working-directory: ${{ github.workspace }}/${{ inputs.microservicePath }}
        run: |
          docker build -t \
          ${{ secrets.DOCKER_REGISTRY }}/\
          ${{ inputs.microservicePath }}:\
          ${{ inputs.tag }} \
          --file ${{ inputs.dockerfileName }} \
          .
      
      - name: Scan image trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKER_REGISTRY }}/${{ inputs.microservicePath }}:${{ inputs.tag }}
          format: sarif
          outputs: trivy_results_${{ inputs.microservicePath }}_${{ inputs.tag }}.sarif
          ignore-unfixed: true
          severity: 'HIGH,CRITICAL'

      - name: upload trivy artifact
        uses: actions/upload-artifact@v4
        with:
          name: trivy_results_${{ inputs.microservicePath }}_${{ inputs.tag }}
          path: trivy_results_${{ inputs.microservicePath }}_${{ inputs.tag }}.sarif
          retention-days: 4

      - name: Verify Docker login
        run: docker info | grep "Username" || echo "Not logged in"

      - name: List Docker images
        run: docker images

      - name: Check image exists before push
        run: docker images || echo "Image not found"

      - name: push container
        run: |
          docker push ${{ secrets.DOCKER_REGISTRY }}/${{ inputs.microservicePath }}:${{ inputs.tag }}